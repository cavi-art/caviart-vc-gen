;;; -*- mode: common-lisp; -*-
;;; CAVIART-VCGEN - A verification condition generator for the CAVI-ART project
;;; developed originally at GPD UCM.
;;; Copyright (C) 2016 Santiago Saavedra López, Grupo de Programación Declarativa -
;;; Universidad Complutense de Madrid
;;;
;;; This file is part of CAVIART-VCGEN.
;;;
;;; CAVIART-VCGEN is free software: you can redistribute it and/or modify
;;; it under the terms of the GNU Affero General Public License as
;;; published by the Free Software Foundation, either version 3 of the
;;; License, or (at your option) any later version.
;;;
;;; CAVIART-VCGEN is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU Affero General Public License for more details.
;;;
;;; You should have received a copy of the GNU Affero General Public License
;;; along with CAVIART-VCGEN.  If not, see <http://www.gnu.org/licenses/>.

(theory:define :arrays)

(theory/arrays/vc:preamble (why3 prover)
			   (why3-use int.Int)
			   (why3-use array.Array)
			   (why3-use array.Sorted))

(theory/arrays/rt:funalias length #'cl:length)
(theory/arrays/rt:typealias array simple-vector)
(theory/arrays/rt:defun make-array (lambda (args) (make-array args)))

(theory:define :array-equality)
(vc)
(preamble (why3 prover)
	  (why3-use array.Array))

(predicate same_sub ((a (array 'a))
		     (b (array 'a))
		     (l int)
		     (r in))
  (and (forall ((i int))
	       (@ <= l i)
	       (@ < i r)
	       (@ = (@ get a i) (@ get b i)))))
